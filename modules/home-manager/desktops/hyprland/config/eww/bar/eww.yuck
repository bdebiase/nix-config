;; Variables
(defpoll clock_time :interval "5m" "date +\%I")
(defpoll clock_minute :interval "5s" "date +\%M")
(defpoll clock_date :interval "10h" "date '+%m/%d'")

(deflisten workspaces0 "/mnt/LinuxExpansion/git/hyprland-workspaces/target/release/hyprland-workspaces DP-2 1-10")
(deflisten workspaces1 "/mnt/LinuxExpansion/git/hyprland-workspaces/target/release/hyprland-workspaces HDMI-A-1 11-20")

;; Widgets
(defwidget separator []
    (box :class "separator")
)

(defwidget hyprworkspaces [workspaces]
    (eventbox
        :onscroll "hyprctl dispatch workspace `echo {} | sed 's/down/+/\' | sed 's/up/-/'`1"

        (box :class "workspaces-widget" :space-evenly false :spacing 2
            (for i in workspaces
                (button
                    :class "${i.class} ${i.windows <= 0 ? "empty" : ""}"
                    :onclick "hyprctl dispatch workspace ${i.id}"
                    :visible {i.id <= 0 ? false : true }
                    :tooltip "${i.name}"

                    (overlay
                        (box :class "highlight"
                            :style "background: rgba(${i.color[0]}, ${i.color[1]}, ${i.color[2]}, 0.15);"
                        )

                        (box :class "icon"
                            :style "background-image: url('${i.icon_path}')"
                        )
                    )
                )
            )
        )
    )
)

(defwidget clock []
    (box :class "clock-widget widget"
        ;(eventbox :onhover "${eww} update time_rev=true"
        (box
            ;:onhoverlost "${eww} update time_rev=false"

            (button
                (box :space-evenly false :valign "center" :orientation "v"
                    (box
                        (label :class "clock-hour time-label" :text clock_time)
                        (label :class "clock-separator time-label" :text ":")
                        (label :class "clock-minute time-label" :text clock_minute)
                    )
                )
            )
        )
    )
)

(defwidget tray []
    (systray :class "system-tray-widget widget")
)

; Left
(defwidget launcher []
    (button :class "launcher-button widget")
)

; Bar
(defwidget left []
	(box :orientation "h"
		:space-evenly false
        :halign "start"
		:class "left_modules modules-container"
        :spacing 2

        (launcher)
        (separator)
    )
)

(defwidget center [ws]
	(box :orientation "h"
		:space-evenly false
        :halign "center"
		:class "center_modules modules-container"
        :spacing 2

        (hyprworkspaces :workspaces ws)
    )
)

(defwidget right []
	(box :orientation "h"
		:space-evenly false
        :halign "end"
		:class "right_modules modules-container"
        :spacing 2

        (tray)
        (separator)
        (clock)
    )
)

(defwidget bar [monitor]
    (box :class "dock"
        :orientation "h"
        :spacing 2

        ;(left)
        (center :ws {monitor == 0 ? workspaces0 : workspaces1})
        ;(right)
    )
)

(defwidget top_bar []
    (box
        :class "bar"
        :orientation "h"
        :spacing 2

        ;(left)
        (right)
    )
)

;;  Windows
(defwindow bar_1
    :monitor 0
    :exclusive true
    :focusable false
    :geometry (geometry
        :x "0%"
        :y "4px"
        :width "0px"
        :height "38px"
        :anchor "bottom center"
    )
    :stacking "fg"
    :windowtype "dock"

    (bar :monitor 0)
)

(defwindow top_bar_1
    :monitor 0
    :exclusive true
    :focusable false
    :geometry (geometry
        :x "0%"
        :y "0%"
        :width "100%"
        :height "32"
        :anchor "top center"
    )
    :stacking "fg"
    :windowtype "dock"

    (top_bar)
)

(defwindow bar_2
    :monitor 1
    :exclusive true
    :focusable false
    :geometry (geometry
        :x "0%"
        :y "4px"
        :width "1914px"
        :height "38px"
        :anchor "bottom center"
    )
    :stacking "fg"
    :windowtype "dock"

    (bar :monitor 1)
)
